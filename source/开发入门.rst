开发入门
======================


本手册将向你解释如何来进行 Haiku 系统的开发入门。

手册相关
----------------------

Haiku 系统开发入门的最好的方式是深入了解它的开发环境以及尽可能的熟悉这一系统。如果你以前有过为 BeOS 开发程序的经验，那么使用 Haiku API 进行编程将会非常容易。如果你还是个新手，你可以尝试下面的任务。我们对你的技能和特点不是很了解，因此不能够给你安排一些任务，如果你可以自愿选择一个任务，然后由我们来帮助你完成，那将是一个很好的选择。

入门任务
----------------------

下面是可选的任务：

* 修改字体敏感性问题以及硬编码值 

  试着运行 apps,改变字体显示，检查是否一切都能够完好的显示；否则，您可以尝试着修改这个 bug。检查的硬编码值使用的源（例如，颜色，路径），并且使用各自的API调用来检索系统内置的编码值(如：通过 ui_color())。

* 设计我们 UI(用户界面)和应用程序，使它们更加符合我们的 HIG(人机交互界面) 

  运行一些程序，检查它们的菜单和按钮的命名和放置位置是否正确(举一个例子，那些用来打开一个会话的菜单或者按钮时以“…”结束，使用 B_UTF8_ ELLIPSIS)同时, 检查一下是否那些参数配置会话框及时的应用了那些改变的设定(或者有“应用”两字的按钮)，并且检查它们是否有一个“恢复”按钮。(而不是“取消”和“确定”)而且还要检查它们和其他的系统偏好配置是否一致。如果希望获得有关这一方面的详细信息，可以参看 `人机界面规范`_。

* 清理不符合规范的源文件 

  我们所有的源程序都遵守已经制定的 `源码规范`_ (但是那些从其他项目引入的源码除外)。还有一些本地程序也不遵循编码规范。把它们整理干净，让它们更加美观，然后向我们的 `错误跟踪系统`_ 提交一个补丁来作为 enhancement 任务单。

* 与错误跟踪系统相关的简单任务 

  请在错误跟踪系统中浏览一下这些 `简单任务列表`_ 。列表中的大多数错误是可以被个人所修复的。选出其中之一，然后注明您正在修复这一错误。完成之后您就可以向我们提交相关补丁。

如果您在上述列表中未找到适合的项目，您可以向我们的项目开发组发送一份自己的简介，这份简介包括以下的内容：

* 您最擅长什么？－举例来说：“我是一个专业的C++开发者。”或“我是一个有着两年c++开发经验的编程爱好者”。
* 您每周可以拿出多少时间进行开发？给出粗略的估计即可，您只需要让我们知道什么样的任务可以由您来胜任足矣。
* 您是否具有其他特别领域的开发经验？例如：系统内核，网络，文件系统等等。
* 您对哪些项目特别感兴趣？

我们会向您提出一些问题，然后再做出任务安排，也可能会给您指出特别的错误。

当您找到任务
----------------------

当您发现了自己感兴趣的任务后，你尽可在项目开发邮件列表里询问有关问题。在编写代码之前，请参阅我们的编码规范，并且尽可能的记住它们(在这点上我们是很严格的)。祝愿您可以在为Haiku编写代码的过程中找到自己的兴趣所在。

编写代码准备
----------------------

* 目前，Haiku 是最合适的开发环境。当然 Linux、BSD 和 OS X 也可以。但是 BeOS，Zeta，Cygn 和 Solaris 等平台将不再作为开发环境，也将不再被支持。
* 订阅以下邮件列表：
    * `Haiku开发邮件列表`_ 
    * `Haiku普通邮件列表`_ 
    * `提交日志`_ 
* 了解您所使用系统上的[开发工具](预备软件)。
* 阅读如何[获取和编译源代码](构建Haiku)。
* 熟悉我们的源代码树的基本布局。
* 熟悉我们的`项目管理和错误问题跟踪系统`_ (Trac)。
* 学习我们的 `源码规范 <Haiku编码规范>`_。所有 Haiku 源码都应该遵循该规范。

获取 GIT 提交权限
----------------------

我们将根据开发者对于 Haiku 代码的贡献来决定他们是否具有 Haiku 源码库的 GIT 提交权限。您可以通过我们的 `Trac 错误提交工具 <http://dev.haiku-os.org/>`_ 提交补丁来快速的获取SVN写入权限。

当您成功地向我们的 Haiku 代码库里提交了一些补丁之后，则可以向 `Haiku 开发邮件列表`_ 里发送邮件申请获得 GIT 提交权限。为了便于审查您的任务和对您的要求做出决定，请在您的邮件里包含您所提供的补丁清单(标题以及链接到 Track 的条目)。

深入阅读
----------------------

* `FAQ: 是否有简单的引导任务？ <http://haiku-os.org/development/faq#intro-tasks>`_
* `源码库布局的简明介绍 <源码库布局简明介绍.rst>`_
* `开发者文档 <开发者文档.rst>`_
* `The BeBook <http://www.haiku-os.org/legacy-docs/bebook/>`_
* `Programming the Be Operating System`_ (`镜像下载`_)
* `Jam 入门 <JamRM入门教程.rst>`_
* `Jam 参考文档 <jamfile参考.rst>`_
* `GIT 入门参考`_

.. _人机界面规范: http://api.haiku-os.org/HIG/
.. _错误跟踪系统: http://dev.haiku-os.org/
.. _简单任务列表: http://dev.haiku-os.org/wiki/EasyTasks

.. _Haiku开发邮件列表: http://www.freelists.org/list/haiku-development
.. _Haiku普通邮件列表: http://www.freelists.org/list/haiku
.. _提交日志: http://www.freelists.org/list/haiku-commits
.. _Programming the Be Operating System: http://www.oreilly.com/catalog/beosprog/book/
.. _镜像下载: http://www.haiku-os.org/files/downloads/programmingbeos.zip
.. _GIT 入门参考: http://dev.haiku-os.org/wiki/GitStarted
.. _项目管理和错误问题跟踪系统: http://dev.haiku-os.org/wiki

